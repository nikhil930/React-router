{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikhi\\\\Desktop\\\\Projects\\\\ReactRouter\\\\src\\\\pages\\\\AllQuotes.js\",\n    _s = $RefreshSig$();\n\nimport QuoteList from './../components/quotes/QuoteList';\nimport useHttp from './../hooks/use-http';\nimport { getAllQuotes } from '../lib/api';\nimport { useEffect } from 'react';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllQuotes = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    data: LoadedQuotes,\n    error\n  } = useHttp(getAllQuotes, true);\n\n  if (status === 'completed' && error === null && LoadedQuotes.length != 0) {\n    return /*#__PURE__*/_jsxDEV(QuoteList, {\n      quotes: LoadedQuotes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 16\n    }, this);\n  } else if (error !== null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centerd focussed\",\n      children: \"No Quotes Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this);\n  }\n};\n\n_s(AllQuotes, \"PDGIXqH2vcYUasiwzMAWvTbQUBs=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuotes;\nexport default AllQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"sources":["C:/Users/nikhi/Desktop/Projects/ReactRouter/src/pages/AllQuotes.js"],"names":["QuoteList","useHttp","getAllQuotes","useEffect","LoadingSpinner","AllQuotes","sendRequest","status","data","LoadedQuotes","error","length"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,kCAAtB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;;AACA,MAAMC,SAAS,GAAG,MAAK;AAAA;;AACnB,QAAK;AAACC,IAAAA,WAAD;AAAeC,IAAAA,MAAf;AAAyBC,IAAAA,IAAI,EAACC,YAA9B;AAA6CC,IAAAA;AAA7C,MAAuDT,OAAO,CAACC,YAAD,EAAgB,IAAhB,CAAnE;;AACA,MAAGK,MAAM,KAAG,WAAT,IAAwBG,KAAK,KAAG,IAAhC,IAAwCD,YAAY,CAACE,MAAb,IAAqB,CAAhE,EACA;AACI,wBAAO,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEF;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAHD,MAIK,IAAGC,KAAK,KAAG,IAAX,EACL;AACI,wBAAO;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAHI,MAID;AACA,wBAAO;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AAEJ,CAdD;;GAAML,S;UAC0DJ,O;;;KAD1DI,S;AAeN,eAAeA,SAAf","sourcesContent":["import QuoteList from './../components/quotes/QuoteList'\r\nimport useHttp from './../hooks/use-http';\r\nimport { getAllQuotes } from '../lib/api';\r\nimport { useEffect } from 'react';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nconst AllQuotes = () =>{\r\n    const{sendRequest , status ,  data:LoadedQuotes , error } = useHttp(getAllQuotes , true);\r\n    if(status==='completed' && error===null && LoadedQuotes.length!=0)\r\n    {\r\n        return <QuoteList quotes={LoadedQuotes} />\r\n    }\r\n    else if(error!==null)\r\n    {\r\n        return <div className='centered'>{error}</div>\r\n    }\r\n    else{\r\n        return <div className='centerd focussed'>No Quotes Found</div>\r\n    }\r\n    \r\n};\r\nexport default AllQuotes;"]},"metadata":{},"sourceType":"module"}