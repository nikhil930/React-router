{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikhi\\\\Desktop\\\\Projects\\\\ReactRouter\\\\src\\\\pages\\\\QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, Route, Switch, Link } from \"react-router-dom\";\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from './../components/quotes/HighlightedQuote';\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport { useEffect } from \"react/cjs/react.development\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteDetail = () => {\n  _s();\n\n  const params = useParams().quoteId;\n  const {\n    sendRequest,\n    status,\n    data: quote,\n    error\n  } = useHttp(getSingleQuote, true);\n  useEffect(() => {\n    sendRequest(params);\n  }, [sendRequest, params]);\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this);\n  } else if (error !== null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (quote === null) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"No Quotes found...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/ ${params}/comments`,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"btn--flat\",\n        to: `/quotes/ ${params}/comments`,\n        children: \" Comments \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/quotes/:quoteId/comments\",\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuoteDetail, \"S5aKnmBu2oW1KaBBF+VYL++nPLI=\", false, function () {\n  return [useParams, useHttp];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["C:/Users/nikhi/Desktop/Projects/ReactRouter/src/pages/QuoteDetail.js"],"names":["useParams","Route","Switch","Link","Comments","HighlightedQuote","useHttp","getSingleQuote","useEffect","LoadingSpinner","QuoteDetail","params","quoteId","sendRequest","status","data","quote","error","text","author"],"mappings":";;;AAAA,SAASA,SAAT,EAAqBC,KAArB,EAA4BC,MAA5B,EAAoCC,IAApC,QAAgD,kBAAhD;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,yCAA7B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;;AAEA,MAAMC,WAAW,GAAG,MAAK;AAAA;;AACrB,QAAMC,MAAM,GAACX,SAAS,GAAGY,OAAzB;AAEA,QAAM;AAACC,IAAAA,WAAD;AAAeC,IAAAA,MAAf;AAAwBC,IAAAA,IAAI,EAACC,KAA7B;AAAqCC,IAAAA;AAArC,MAA8CX,OAAO,CAACC,cAAD,EAAkB,IAAlB,CAA3D;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACVK,IAAAA,WAAW,CAACF,MAAD,CAAX;AACH,GAFQ,EAEP,CAACE,WAAD,EAAaF,MAAb,CAFO,CAAT;;AAIA,MAAGG,MAAM,KAAG,SAAZ,EACA;AACI,wBAAO,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAHD,MAIK,IAAGG,KAAK,KAAG,IAAX,EACL;AACI,wBAAO;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,MAAGD,KAAK,KAAG,IAAX,EACA,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEA,sBACI;AAAA,4BACA,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEA,KAAK,CAACE,IAA9B;AAAoC,MAAA,MAAM,EAAEF,KAAK,CAACG;AAAlD;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,YAAWR,MAAO,WAAhC;AAA4C,MAAA,KAAK,MAAjD;AAAA,6BACA,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,WAAhB;AAA4B,QAAA,EAAE,EAAG,YAAWA,MAAO,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFA,eAKJ,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,2BAAZ;AAAA,6BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALI;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAhCD;;GAAMD,W;UACWV,S,EAEuCM,O;;;KAHlDI,W;AAiCN,eAAeA,WAAf","sourcesContent":["import { useParams  ,Route ,Switch, Link } from \"react-router-dom\";\r\nimport Comments from '../components/comments/Comments';\r\nimport HighlightedQuote from './../components/quotes/HighlightedQuote'\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\nimport { useEffect } from \"react/cjs/react.development\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\nconst QuoteDetail = () =>{\r\n    const params=useParams().quoteId;\r\n    \r\n    const {sendRequest , status , data:quote , error} = useHttp(getSingleQuote , true);\r\n\r\n    useEffect(()=>{\r\n        sendRequest(params);\r\n    },[sendRequest,params]);\r\n\r\n    if(status==='pending')\r\n    {\r\n        return <LoadingSpinner />\r\n    }\r\n    else if(error!==null)\r\n    {\r\n        return <div className='centered'>{error}</div>\r\n    }    \r\n    if(quote===null)\r\n    return <h2>No Quotes found...</h2>\r\n    \r\n    return (\r\n        <div>\r\n        <HighlightedQuote text={quote.text} author={quote.author} />\r\n        <Route path={`/quotes/ ${params}/comments`} exact>\r\n        <Link className='btn--flat' to={`/quotes/ ${params}/comments`} > Comments </Link>\r\n        </Route>\r\n    <Route path='/quotes/:quoteId/comments' >\r\n        <Comments />\r\n    </Route>\r\n    </div>\r\n    )\r\n\r\n};\r\nexport default QuoteDetail;"]},"metadata":{},"sourceType":"module"}