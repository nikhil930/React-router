{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikhi\\\\Desktop\\\\Projects\\\\ReactRouter\\\\src\\\\components\\\\comments\\\\NewCommentForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './NewCommentForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewCommentForm = props => {\n  _s();\n\n  const commentTextRef = useRef();\n  const {\n    sendRequest,\n    status,\n    error\n  } = useHttp(addComment);\n\n  const submitFormHandler = event => {\n    event.preventDefault(); // optional: Could validate here\n\n    sendRequest({\n      quoteId: props.quoteId,\n      commentData: commentTextRef.current.value\n    });\n\n    if (status === 'pending') {\n      return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 14\n      }, this);\n    } else if (status === 'completed' && !error) {\n      props.onAddComment();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitFormHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      onSubmit: submitFormHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"comment\",\n        children: \"Your Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"comment\",\n        rows: \"5\",\n        ref: commentTextRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewCommentForm, \"eF+nJGlDEobJvnXiulYn4snPsgM=\", false, function () {\n  return [useHttp];\n});\n\n_c = NewCommentForm;\nexport default NewCommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewCommentForm\");","map":{"version":3,"sources":["C:/Users/nikhi/Desktop/Projects/ReactRouter/src/components/comments/NewCommentForm.js"],"names":["useRef","useHttp","addComment","LoadingSpinner","classes","NewCommentForm","props","commentTextRef","sendRequest","status","error","submitFormHandler","event","preventDefault","quoteId","commentData","current","value","onAddComment","form","control","actions"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AAEA,OAAOC,OAAP,MAAoB,6BAApB;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAMC,cAAc,GAAGP,MAAM,EAA7B;AACA,QAAK;AAACQ,IAAAA,WAAD;AAAeC,IAAAA,MAAf;AAAwBC,IAAAA;AAAxB,MAAiCT,OAAO,CAACC,UAAD,CAA7C;;AAEA,QAAMS,iBAAiB,GAAIC,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACC,cAAN,GADmC,CAGnC;;AAEAL,IAAAA,WAAW,CAAC;AAACM,MAAAA,OAAO,EAACR,KAAK,CAACQ,OAAf;AAAyBC,MAAAA,WAAW,EAACR,cAAc,CAACS,OAAf,CAAuBC;AAA5D,KAAD,CAAX;;AAEA,QAAGR,MAAM,KAAG,SAAZ,EACA;AAEE,0BAAO,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAJD,MAKK,IAAGA,MAAM,KAAG,WAAT,IAAuB,CAACC,KAA3B,EACL;AACEJ,MAAAA,KAAK,CAACY,YAAN;AACD;AAEF,GAjBD;;AAmBA,sBACE;AAAM,IAAA,SAAS,EAAEd,OAAO,CAACe,IAAzB;AAA+B,IAAA,QAAQ,EAAER,iBAAzC;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEP,OAAO,CAACgB,OAAxB;AAAiC,MAAA,QAAQ,EAAET,iBAA3C;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAU,QAAA,EAAE,EAAC,SAAb;AAAuB,QAAA,IAAI,EAAC,GAA5B;AAAgC,QAAA,GAAG,EAAEJ;AAArC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAEH,OAAO,CAACiB,OAAxB;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAlCD;;GAAMhB,c;UAEkCJ,O;;;KAFlCI,c;AAoCN,eAAeA,cAAf","sourcesContent":["import { useRef } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const{sendRequest , status , error} = useHttp(addComment);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    sendRequest({quoteId:props.quoteId , commentData:commentTextRef.current.value});\n\n    if(status==='pending')\n    {\n\n      return <LoadingSpinner />\n    }\n    else if(status==='completed'&& !error)\n    {\n      props.onAddComment();\n    }\n    \n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n"]},"metadata":{},"sourceType":"module"}